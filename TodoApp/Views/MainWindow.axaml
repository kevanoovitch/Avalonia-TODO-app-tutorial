<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:TodoApp.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="500" Padding="4"
        x:Class="TodoApp.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="TodoApp">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    <Grid RowDefinitions="Auto, *, Auto"
        x:Name="Root">
    
    <!-- This is our title block. --> 
    <TextBlock Classes="h1" Text="The ToDo-List" /> 

    <ScrollViewer Grid.Row="1">
    <!-- This ItemsControl show all added ToDoItems. -->
    <!-- It needs to be placed inside a ScrollViewer because other than a ListBox it has not its own -->
    
      <ItemsControl ItemsSource="{Binding ToDoItems}">
        <ItemsControl.ItemTemplate>
        <!--  The ItemTemplate defines how each item should be represented  -->
        <!--  Our Item will be represented by a CheckBox and a Delete-Button  -->
        <DataTemplate DataType="vm:ToDoItemViewModel">
            <Grid ColumnDefinitions="*, Auto">
                <CheckBox Content="{Binding Content}"
                IsChecked="{Binding IsChecked}" />

            <Button Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).RemoveItemCommand}"
                    CommandParameter="{Binding .}"
                Grid.Column="1">
                <PathIcon Data="{DynamicResource DelteIconData}" Foreground="Red" /> 
              </Button>
            </Grid>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
  
    </ScrollViewer>

    <!-- This TextBox can be used to add new ToDoItems --> 
    <TextBox Grid.Row="2"
     Text="{Binding NewItemContent}"
      Watermark="Add a new Item">
      <TextBox.InnerRightContent>
          <Button Command="{Binding AddItemCommand}" >
            Add 
          </Button>
      </TextBox.InnerRightContent>

      <TextBox.KeyBindings>
        <KeyBinding Command="{Binding AddItemCommand}" Gesture="Enter" />
      </TextBox.KeyBindings>
    </TextBox> 

    </Grid>

</Window>
